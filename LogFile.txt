03.16.2014 [Ned]
Created a way to order the nodes in GraphbyGrid.
Confirmed that example Life code works by testing with Blinker object [0,0,0,1,1,1,0,0,0]

03.17.2014 [Ned]
Design Notes/Suggestions:

The SpatialGraph class should have a property Node_Vals to contain the initial values associated with each node. This would allow
the tools for constructing graph objects (byPoint, byGrid, byEdge, byPoly, etc) and the tools for visualization (toPoints, toEndges, etc) to work outside
the context of the CA (AntWorld) and therefore these components might be more generalizable.
The CA components would "translate" to and from SpatialGraphs: Antworld would take in a graph, read the initial conditions from
the Node_Vals list, and create an AntWorld object with all the generations. GenVals would take an Antworld object, select a generation,
and insert that generation's values into the Node_Vals prop of a graph, passing a SpatialGraph downstream to the graph visualization tools.


03.23.2014 [Ned]
Modified SpatialGraph as a stand-alone entity, with required GH machinery (I think). Reogranized components into Graph-related ("Graphs") 
and Ants-related ("Worlds") and modified input and output parameters. Graphs can be used independently from AntWorlds now.
Reworked GH testing scripts to work with new component topology. All seems to work.




